name: Build

on:
  workflow_dispatch:
  push:
  pull_request:

env:
  TIMEZONE: UTC
  COVERAGE: true
  CI_NODE_TOTAL: 10

jobs:
  rspec:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:10
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: open_food_network_test
          POSTGRES_USER: ofn
          POSTGRES_PASSWORD: f00d
    strategy:
      matrix:
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - uses: actions/setup-node@v2
        with:
          node-version: '14.15.5'

      - name: Install JS dependencies
        run: yarn install --frozen-lockfile

      - name: Set up application.yml
        run: cp config/application.yml.example config/application.yml

      - name: Set up database
        run: |
          bundle exec rake db:create RAILS_ENV=test
          bundle exec rake db:schema:load RAILS_ENV=test

      - name: Run some specs
        run: CI_NODE_INDEX="${{ matrix.ci_node_index }}" bundle exec rake 'knapsack:rspec[--format progress --tag ~performance]'

      - name: Codecov
        uses: codecov/codecov-action@v1.3.1

  engines:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:10
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: open_food_network_test
          POSTGRES_USER: ofn
          POSTGRES_PASSWORD: f00d
    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - uses: actions/setup-node@v2
        with:
          node-version: '14.15.5'

      - name: Install JS dependencies
        run: yarn install --frozen-lockfile

      - name: Set up application.yml
        run: cp config/application.yml.example config/application.yml

      - name: Set up database
        run: |
          bundle exec rake db:create RAILS_ENV=test
          bundle exec rake db:schema:load RAILS_ENV=test

      - name: Run engine specs
        run: bundle exec rspec --pattern "engines/*/spec/{,/*/**}/*_spec.rb"

  karma:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:10
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: open_food_network_test
          POSTGRES_USER: ofn
          POSTGRES_PASSWORD: f00d
    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - uses: actions/setup-node@v2
        with:
          node-version: '14.15.5'

      - name: Install JS dependencies
        run: yarn install --frozen-lockfile

      - name: Set up application.yml
        run: cp config/application.yml.example config/application.yml

      - name: Set up database
        run: |
          bundle exec rake db:create RAILS_ENV=test
          bundle exec rake db:schema:load RAILS_ENV=test

      - name: Run JS tests
        run: RAILS_ENV=test bundle exec rake karma:run
